- path: /groups/name=((group))/jobs/-
  type: replace
  value: publish-stemcells-((group))

- path: /jobs/-
  type: replace
  value:
    name: publish-stemcells-((group))
    serial: true
    plan:
    - aggregate:
      - get: version
        resource: version-((group))
        passed:
        - test-stemcells-((group))
        - bats-((group))
      - get: bosh-linux-stemcell-builder
        resource: bosh-linux-stemcell-builder-((group))
        passed:
        - bats-((group))
      - get: stemcells-index
    - file: bosh-linux-stemcell-builder/ci/tasks/assert-version-aligns.yml
      task: assert-version-aligns
    - file: bosh-linux-stemcell-builder/ci/tasks/publish.yml
      params:
        AWS_ACCESS_KEY_ID: ((stemcell_aws_access_key))
        AWS_SECRET_ACCESS_KEY: ((stemcell_aws_secret_key))
        CANDIDATE_BUCKET_NAME: ((candidate_stemcell_bucket))
        COPY_KEYS: |
          aws/bosh-stemcell-%s-aws-xen-hvm-ubuntu-xenial-go_agent.tgz
          google/bosh-stemcell-%s-google-kvm-ubuntu-xenial-go_agent.tgz
          openstack/bosh-stemcell-%s-openstack-kvm-ubuntu-xenial-go_agent.tgz
          openstack/bosh-stemcell-%s-openstack-kvm-ubuntu-xenial-go_agent-raw.tgz
          warden/bosh-stemcell-%s-warden-boshlite-ubuntu-xenial-go_agent.tgz
          vsphere/bosh-stemcell-%s-vsphere-esxi-ubuntu-xenial-go_agent.tgz
          vcloud/bosh-stemcell-%s-vcloud-esxi-ubuntu-xenial-go_agent.tgz
          azure/bosh-stemcell-%s-azure-hyperv-ubuntu-xenial-go_agent.tgz
        OS_NAME: ubuntu
        OS_VERSION: xenial
        PUBLISHED_BUCKET_NAME: ((published_stemcell_bucket))
        VERSION_PREFIX: ubuntu-xenial/v
      task: copy-artifacts
    - aggregate:
      - params:
          only_tag: true
          repository: bosh-linux-stemcell-builder
          tag: version-tag/tag
        put: bosh-linux-stemcell-builder-push-((group))
      - params:
          rebase: true
          repository: stemcells-index
        put: stemcells-index
    - task: build-release-metadata
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        run:
          path: /bin/sh
          args:
          - -c
          - |
            version=$(cat version/version | sed 's/\.0$//')
            mkdir -p release-metadata
            echo -n "Ubuntu Xenial v$version" > release-metadata/name
            echo -n "ubuntu-xenial/v$version" > release-metadata/tag
            echo -n "Periodic Ubuntu Xenial stemcell bump ($(date "+%h %d, %Y"))" > release-metadata/body
        inputs:
        - name: bosh-linux-stemcell-builder
        - name: version
        outputs:
        - name: release-metadata
    - put: gh-release
      params:
        body: release-metadata/body
        name: release-metadata/name
        tag: release-metadata/tag
